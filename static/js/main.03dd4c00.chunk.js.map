{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","hasUrlError","onChange","onBlur","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","trim","pattern","validateUrl","url","test","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","isEnabled","onSubmit","preventDefault","current","onClick","disabled","App","moviesFromServer","setMovies","movieAdded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03dd4c00.chunk.js","sourcesContent":["import './MovieCard.scss';\nimport React from 'react';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  hasUrlError?: boolean,\n  onChange?: (newValue: string) => void,\n  onBlur?: () => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  hasUrlError,\n  onChange = () => { },\n  onBlur = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => {\n            onBlur();\n            onChange(value.trim());\n            setTouched(true);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasUrlError && (\n        <p className=\"help is-danger\">Enter the correct URL</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nconst validateUrl = (url: string) => {\n  return !pattern.test(url);\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n\n  const handleUrlValidation = () => {\n    setImgUrlError(validateUrl(imgUrl));\n    setImdbUrlError(validateUrl(imdbUrl));\n  };\n\n  const clear = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n    setImgUrlError(false);\n    setImdbUrlError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (imgUrlError || imdbUrlError) {\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n    setCount(current => current + 1);\n    clear();\n  };\n\n  const isEnabled = title && imgUrl && imdbUrl && imdbId;\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => {\n          setTitle(event);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(event) => {\n          setDescription(event);\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => {\n          setImgUrl(event);\n        }}\n        hasUrlError={imgUrlError}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => {\n          setImdbUrl(event);\n        }}\n        hasUrlError={imdbUrlError}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => {\n          setImdbId(event);\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleUrlValidation}\n            disabled={!isEnabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const newMovie = (movieAdded: Movie) => {\n    setMovies(current => [\n      ...current,\n      movieAdded,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={newMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}